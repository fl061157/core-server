
{url}/api/contact/add
{url}/api/contacts/upload
等

添加好友涉及的方法：
saveFriend
saveFriendAsync

其他涉及的部分：
已删除好友列表

1. 对方暂未加自己，自己发出请求：发出系统消息1通知对方
2. 对方已经加了自己，自己发出请求：直接加好友，向对方发送系统消息2通知已经成为好友，并也向自己发送系统消息2通知已经成为好友，将原来的系统消息1替代掉
3. 对方已经加了自己，自己接受请求：加好友，发送系统消息，向对方发送系统消息2，通知已经成为好友
4. 对于只有一方是另一方好友的情况，如果另一方请求加好友，直接加，同时发送添加成功
5. 双方通讯录中只要同时有对方，则自动将对方加入
由于网络和其他问题，客户端可能会多次调用接口，系统消息可能会多次发送到客户端，故客户端需要做去重处理
第三种情况，可以同时向双方发送系统消息2，保证业务一致性和正确性

系统消息1:
对方请求加好友
系统消息2:
通知对方已经成为你的好友


修改点：
1.
所有添加好友的接口，查找对方是否已经申请加好友
如果已经申请，则进行2操作
涉及的接口：
1) saveFriend
method				path                注意
addContact			/contact/add        协议需要变更，返回值变为是否成功
addContactByUid		/contact/addByUid
以上两项改为：
将请求信息写库，并发送系统通知
判断自己是否是对方的好友或对方已经发出了好友申请，此时直接加为好友，并发送系统通知
同时判断是否应该计数+1
2) saveFriend
类					方法
UserService			createNewUser
以上改为：
将所有的用户加入到请求列表，但不给对方发送请求
如果对方通讯录里面有自己，则将双方加为好友，并发出好友添加成功系统通知
3) saveFriendAsync
类					方法
PhoneBookService	uploadPhoneBookWithName
以上改为：
将所有的用户加入到请求列表，但不给对方发送请求
如果对方通讯录里面有自己，则将双方加为好友，并发出好友添加成功系统通知

2.
添加好友的接口，注意保留如果已经成为好友，则禁止加好友
并进行1操作

3.
新建接口，处理加好友的请求，进行3操作

4.
好友请求时，对方如果不在线，则发送push（在系统消息内设置push参数）

5.
有新的好友请求时，请求计数+1


#############用户注册####
1 用户A注册时，需要通讯录包含该用户A的所有用户（如B、C等用户）发送消息。
  消息的内容为 某人（用户A在如B/C等用户本地通讯录的名称）已经是cg用户

2 用户A上传通讯录时,如果通讯录的用户如B已经是cg用户，则A自动添加B为好友。
  且A添加到B的好友请求队列中，以便B添加A时能够自动添加。

  如果B的通讯录中包含A，则A用户自动添加到B的好友中，并且向B用户发送消息(添加好友成功的系统消息)

3 可能认识的人 /friend/recommend
  用户A的手机号码为a，查找其可能认识的人
  1） 查找通讯录中包含号码a的所有人如B、C、D
  2） 查找用户A删除的好友如C等
  3） 查找用户A的好友用户如D等
  4） 从1）的结果中排除2）和3）的结果

